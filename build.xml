<?xml version="1.0"?>

<project name="eSciDocCoreAdmin" default="ear" basedir=".">

	<property name="build.dir" value="build" />
	<property name="main.build.dir" value="${build.dir}/main" />
	<property name="src.dir" value="src/java" />
	<property name="onejar.src.dir" value="src/onejar" />
	<property name="dist.dir" value="dist" />
	<property name="lib.dir" value="lib" />
	<property name="war.dir" value="${build.dir}/war" />
	<property name="war.webinf.dir" value="${war.dir}/WEB-INF" />
	<property name="ear.metainf.dir" value="${build.dir}/META-INF" />
	<property name="jar.lib.dir" value="${build.dir}/lib" />
	<property name="classes.dir" value="${war.dir}/classes" />
	<property name="onejar.classes.dir" value="${build.dir}/onejar/classes" />
	<property name="src.classes.dir" value="${build.dir}/src/classes" />
	<property name="metadata.dir" value="metadata" />

	<path id="classpath">
		<pathelement path="${classpath}" />
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<!-- Cleans the output folders -->
	<target name="clean" description="Cleans the output folders">
		<delete includeEmptyDirs="true">
			<fileset dir="${build.dir}">
				<include name="**/*"/>
			</fileset>
		</delete>
		<delete includeEmptyDirs="true">
			<fileset dir="${dist.dir}">
				<include name="**/*"/>
			</fileset>
		</delete>
	</target>

	<!-- Creates the output folders -->
	<target name="prepare" depends="clean" description="Creates the output folders">
		<mkdir dir="${onejar.classes.dir}"/>
		<mkdir dir="${src.classes.dir}"/>
		<mkdir dir="${main.build.dir}"/>
	</target>

	<!-- Copy Properties-Files -->
  	<target name="copy" depends="prepare" description="Copies properties-files">
		<!-- copy todir="${war.webinf.dir}" failonerror="false" >
			<fileset dir="${metadata.dir}">
				<include name="**/web.xml" />
			</fileset>
		</copy>
  		
		<copy todir="${ear.metainf.dir}" failonerror="false" >
			<fileset dir="${metadata.dir}">
				<include name="**/application.xml" />
			</fileset>
		</copy -->
  		
  		<!-- Copy Libraries -->
		<copy todir="${jar.lib.dir}" failonerror="false" >
			<fileset dir="${lib.dir}">
				<include name="**/**" />
			</fileset>
		</copy>
  	</target>

  	<!-- Compile -->
  	<target name="compile" depends="copy" description="Compiles source code">
     	<javac destdir="${src.classes.dir}" debug="on">
			<classpath refid="classpath"/>
			<src path="${src.dir}"/>
     	</javac>
     	<javac destdir="${onejar.classes.dir}" debug="on">
			<classpath refid="classpath"/>
			<src path="${onejar.src.dir}"/>
     	</javac>
  	</target>

  	<!-- generate Archive -->
  	<target name="jar" depends="compile" description="Generates eSciDocCoreAdmin.jar in the 'dist' directory.">
     	<!-- Exclude unit tests from the final JAR file -->
     	<jar jarfile="${main.build.dir}/main.jar" 
			basedir="${src.classes.dir}"/>
		<delete includeEmptyDirs="true">
			<fileset dir="${src.classes.dir}">
				<include name="**/classes/**/*"/>
				<exclude name="**/WEB-INF/classes/**/*"/>
			</fileset>
		</delete>
  	</target>

  	<!-- generate war-file -->
  	<target name="jarjar" depends="jar" description="Generates eSciDocCoreAdmin.war in the 'dist' directory.">
     	<!-- Exclude unit tests from the final JAR file -->
     	<jar jarfile="${dist.dir}/eSciDocCoreAdmin.jar" manifest="${metadata.dir}/Manifest.mf">
     	    <fileset dir="${build.dir}"
     	             excludes="**/*.class"/>
     	    <fileset dir="${onejar.classes.dir}"
     	    		includes="**/*.class"/>
     	</jar>
  	</target>

  	<!-- generate war-file -->
  	<target name="war" depends="jar" description="Generates eSciDocCoreAdmin.war in the 'dist' directory.">
     	<!-- Exclude unit tests from the final JAR file -->
     	<jar jarfile="${war.dir}/eSciDocCoreAdmin.war" 
			basedir="${war.dir}"/>
  	</target>

  	<!-- generate ear-file -->
  	<target name="ear" depends="war" description="Generates eSciDocCoreAdmin.ear in the 'dist' directory.">
     	<!-- Exclude unit tests from the final JAR file -->
     	<jar jarfile="${dist.dir}/eSciDocCoreAdmin.ear">
     	    <fileset dir="${war.dir}"
     	             includes="eSciDocCoreAdmin.war"/>
     	    <fileset dir="${build.dir}"
     	    		includes="META-INF/*"/>
     	</jar>
  	</target>

</project>
