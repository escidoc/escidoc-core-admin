<?xml version="1.0"?>

<project name="eSciDoc infrastructure admin tool - main build file" default="dist" basedir=".">

	<property file="etc/${user.name}.properties" />
	<property file="etc/project.properties" />

	<fileset id="libs" dir="${lib.dir}">
	    <include name="**/*.jar"/>
        </fileset>

	<path id="build.classpath">
		<pathelement path="${classpath}" />
		<fileset refid="libs" />
	</path>

	<target name="dist" depends="admin-jar, admin-war">
		<copy todir="${dist.build.dir}" failonerror="false">
			<fileset dir="${bin.src.dir}" includes="**/*" />
			<fileset dir="${doc.src.dir}" includes="**/*" />
			<fileset dir="${etc.dir}" includes="admin-tool.properties" />
			<fileset dir="${foxml-migration.src.dir}" />
		</copy>
	</target>

	<!-- Cleans the output folders -->
	<target name="clean" description="Cleans the output folders">
		<delete dir="${build.dir}"/>
	</target>

	<!-- Creates the output folders -->
	<target name="prepare" depends="clean" description="Creates the output folders">
		<mkdir dir="${java.build.dir}" />
		<mkdir dir="${dist.build.dir}" />
		<mkdir dir="${main.jar.build.dir}" />
		<mkdir dir="${admin.jar.build.dir}" />
		<mkdir dir="${admin.jar.main.dir}" />
		<mkdir dir="${admin.jar.lib.dir}" />
		<mkdir dir="${admin.war.lib.dir}" />
	</target>

	<target name="build" depends="clean, prepare, compile, copy">
	</target>

	<!-- Compile -->
	<target name="compile" description="Compile java classes">
		<javac destdir="${java.build.dir}" debug="on">
			<classpath refid="build.classpath" />
			<src path="${java.src.dir}" />
		</javac>
		<javac destdir="${java.build.dir}" debug="on">
			<classpath refid="build.classpath" />
			<src path="${test.src.dir}" />
		</javac>
	</target>

	<!-- Copy -->
	<target name="copy" description="copy metadata-files">
		<copy todir="${java.build.dir}">
			<fileset dir="${etc.dir}" includes="**/log4j.*" />
		</copy>
		<copy todir="${java.build.dir}">
			<fileset dir="${etc.dir}" includes="**/admin-tool.properties" />
		</copy>
		<copy todir="${java.build.dir}">
			<fileset dir="${test.src.dir}" includes="**/*.xml" />
		</copy>
		<copy todir="${java.build.dir}">
			<fileset dir="${java.src.dir}" includes="**/*.xml" />
		</copy>
	</target>
	
	<target name="main-jar" depends="build">
		<copy todir="${main.jar.build.dir}">
			<fileset dir="${java.build.dir}" includes="de/**/*.class" excludes="**/test/**/*.class"/>
		</copy>
		<delete dir="${main.jar.build.dir}/com" failonerror="false" />
		<copy todir="${main.jar.build.dir}">
			<fileset dir="${etc.dir}" includes="**/log4j.*" />
		</copy>
		<jar jarfile="${admin.jar.main.dir}/${main.jar.name}" basedir="${main.jar.build.dir}" />
	</target>

	<target name="admin-jar" depends="main-jar">
		<copy todir="${admin.jar.build.dir}">
			<fileset dir="${java.build.dir}" includes="**/*.class"  excludes="**/test/**/*.class"/>
			<fileset dir="${etc.dir}" includes="**/log4j.*" />
			
			<fileset dir="${java.src.dir}" includes="*.xml" />
			<fileset dir="${sql.src.dir}" includes="*.sql" />
			
		</copy>
		<delete failonerror="false" >
			<fileset dir="${admin.jar.build.dir}/de" excludes="**/EscidocXsltFunctions.class"/>
	    </delete>
		<copy todir="${admin.jar.lib.dir}">
			<fileset dir="${lib.dir}" includes="**/*"  excludes="**/test/**/*"/>
		</copy>
		<jar jarfile="${dist.build.dir}/${admin.jar.name}" manifest="${metadata.src.dir}/Manifest.mf">
			<fileset dir="${admin.jar.build.dir}" includes="**/*" />
		</jar>
	</target>

	<target name="admin-war" depends="main-jar">
	    <copy todir="${admin.war.lib.dir}" flatten="yes">
		<fileset file="${admin.jar.main.dir}/${main.jar.name}"/>
		<fileset refid="libs"/>
	    </copy>
	    <war destfile="${dist.build.dir}/${admin.war.name}" webxml="${metadata.src.dir}/web.xml">
	       <fileset dir="web"/>
	       <lib dir="${admin.war.lib.dir}"/>
	    </war>
	</target>

	<target name="junit">
		<ant antfile="${src.bin.dir}/build-junit.xml" target="test-fail" dir="" />
	</target>

	<target name="purge" depends="main-jar">
	    <java classname="de.escidoc.core.admin.business.PurgeTool" fork="true">
		<classpath>
                  <path refid="build.classpath"/>
		  <pathelement location="${admin.jar.main.dir}/${main.jar.name}"/>
                </classpath>
	    </java>
        </target>

        <target name="recache">
                <java jar="${dist.build.dir}/eSciDocCoreAdmin.jar" fork="true">
                         <jvmarg value="-Xmx1024m"/>
                         <jvmarg value="-Xms512m"/>
                         <jvmarg value="-XX:MaxPermSize=1024m"/>
                         <arg value="recache" />
                </java>
        </target>



</project>
